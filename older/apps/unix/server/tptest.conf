#
# Sample config file for the tptest server.
# 


# Max packets per second allowed in a UDP test
MaxPPS		3000

# Max packetsize (in bytes) allowed in a UDP test
MaxPacketsize	3000

# Max bitrate (bps) allowed in a UDP test. This value is determined
# by the clients choice of packets per second and packetsize.
MaxBitrate	50000000

# Max time for a test. Note that actual test time may be 
# up to twice this number of seconds
MaxTime		60

# MaxClients determine how many simultaneous clients this
# server will serve.
MaxClients	10

# SyslogLevel determines if we should log stuff to syslog
# and also how detailed the logs should be. Currently we
# only support levels 0-2 where 0 (zero) means to not
# log anything, 1 means to log errors and important
# stuff, and 2 means to log client test results also
SyslogLevel	2

# Use PortRange to force the server to allocate data ports
# within a certain limited range. Both TCP and UDP ports
# will use the same port number range given here. If PortRange
# is not defined, or if it is defined as "0-0", random ports
# will be allocated. Note that the number values must be
# "low-high". That is, the first number must be the lowest
# port number allowed and the second number the highest.
# Reversing the numbers will result in no ports at all 
# being allocated (i.e. breaking the TPTEST service). One
# may, however, specify "1234-1234" to force that particular
# port to be used every time but that will of course limit
# the server to serving a single client, so the MaxClients
# limit should be set to 1 then also. Otherwise connecting
# clients will be accepted for testing, then receive a
# port error when their test is about to commence.
PortRange	2000-2100

#
# You can limit access to the server using regular expressions
# on IP numbers/networks. It does not do hostnames - we haven't
# bothered with that as DNS lookups can slow things down and
# cause timeouts. A later version might implement it though.
# Note that regular expressions are NOT the same as your normal
# wildcard expressions. They are more complex. Crash course:
#
# "." means "any character"
# "*" means any number of repetitions of the previous match
# ".*" means "any characters, any number of times" 
# "\" escapes any special character
# "^" means start of the string
#
# If you want to match all strings beginning with "wow" you
# should use the regular expression "wow.*"
#
# "wow*" will match "wow", "woww", "wowww", "wowwww", etc
#
# If you want to match all three-letter strings with "w" at
# both ends you should use the regular expression "w.w"
# 
#
# Deny all hosts from the 192.168.0 network:
# DenyHost ^192\.168
# The above matches "192.168" and whatever comes after
#
# Note that without the "^" you would also match
# "45.123.192.168" or "124.192.168.44"
# The "^" makes sure the string starts there
#
# Deny all hosts from the 192.16.0/16 network:
# DenyHost ^192\.16\..*
# 
# Note that we could have used "DenyHost ^192\.16.*"
# but that would have matched anything beginning with "192.16"
# which means also "192.168..." or "192.163..."

# But allow 192.168.0.42
# AllowHost ^192\.168\.0\.42

# Deny all hosts from the 10.20 network
# DenyHost ^10\.20\.

# But allow all hosts from the 10.20.30 network
# AllowHost ^10\.20\.30\.

#
# Do a "man regexp" for more info on the syntax of regular
# expressions.
#
# The first 'allowed' rule which matches a given IP number
# allows that host to connect. If no 'allowed' rules match
# the server will start looking through the 'deny' rules and
# if any of them match, the host will be denied access. 
#
